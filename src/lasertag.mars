model lasertag

use Mars

grid-layer Battleground as battleground

// ************************************************************************************************
// **************************************** PASSIVE AGENTS ****************************************
// ************************************************************************************************

agent Spawner on Battleground {
		
	initialize {
		for (var x = 0; x < battleground.DimensionX; x++) {
			for (var y = 0; y < battleground.DimensionY; y++) {
				pos me at #(x, y)
				var value = battleground.GetIntegerValue(x, y)
				switch (value) {
					case 1 : { spawn Barrier }
					case 2 : { spawn Hill }
					case 3 : { spawn Ditch }
					default: { }
				}
			}
		}
	}
	
}

agent Barrier on Battleground {
	
	// returns x-coordinate
	passive GetX() : real => return xcor

	// returns y-coordinate
	passive GetY() : real => return ycor
	
}

agent Hill on Battleground { 

	observe var free : bool = true
	
	// returns x-coordinate
	passive GetX() => return xcor

	// returns y-coordinate
	passive GetY() => return ycor
	
	// returns whether hill is free
	passive IsFree() => return free
	
	// sets hill status to free
	passive Free() => free = true
	
	// sets hill status to occupied
	passive Occupy() => free = false
	
}

agent Ditch on Battleground { 
	
	observe var free : bool = true
	
	// returns x-coordinate
	passive GetX() => return xcor

	// returns y-coordinate
	passive GetY() => return ycor
	
	// returns whether ditch is free
	passive IsFree() => return free
	
	// sets ditch status to free
	passive Free() => free = true
	
	// sets ditch status to occupied
	passive Occupy() => free = false
	
}
